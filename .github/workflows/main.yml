name: Roslyn Analysis Workflow

on:
  push:
    branches:
      - main

jobs:
  analyze-code:
    runs-on: ubuntu-latest

    steps:    
      - name: Checkout repository
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 5.0.x

      - name: Set Project Path
        run: echo "PROJECT_PATH=$(pwd)" >> $GITHUB_ENV

      # Example 1
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v38

      # NOTE: `since_last_remote_commit: true` is implied by default and falls back to the previous local commit.

      - name: Set changed .cs files as environment variable
        run: |
          cs_files=""
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == *.cs ]]; then
              cs_files="$cs_files;$file"
              echo "$file added to cs_files"
            fi
          done
          echo "CHANGED_FILES=$cs_files" >> $GITHUB_ENV


      #- name: List changed files
      #  id: list_changed_files
      #  run: |
      #    git fetch origin ${{ github.event.before }}:${{ github.event.before }}
      #    changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} || true)
      #    changed_cs_files=$(echo "$changed_files" | grep '\.cs$' || true)
      #    echo git diff --name-only ${{ github.event.before }}:${{ github.event.before }}
      #    echo "CHANGED_FILES=$changed_cs_files" >> $GITHUB_ENV

      #- name: List all changed files
      #  run: |
      #    for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
      #      echo "$file was changed"            
      #    done
      #    echo "CHANGED_FILES=${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore Roslyn/Roslyn.csproj

      - name: Analyze and Create Report File
        run: |
          timestamp=$(date +"%Y%m%d%H%M")
          reportFilePath="non_pascal_names_${timestamp}.txt"
          echo "Creating report file: $reportFilePath"
          echo "" > $reportFilePath
          echo "::set-output name=reportFilePath::$reportFilePath"
          echo "REPORT_FILE_PATH=$reportFilePath" >> $GITHUB_ENV
        id: create_report

      - name: Build and Run Roslyn Analysis
        run: |
          REPORT_FILE_PATH="${REPORT_FILE_PATH// /}"
          dotnet run --project Roslyn/Roslyn.csproj >> $REPORT_FILE_PATH
        env:
          CHANGED_FILES: ${{env.CHANGED_FILES}}
          PROJECT_PATH: ${{ env.PROJECT_PATH }}
          REPORT_FILE_PATH: ${{ env.REPORT_FILE_PATH }}

      - name: Add Changes to Staging
        run: |
          git add $REPORT_FILE_PATH
        id: add_changes

      - name: Commit and Push Report
        run: |
          git config user.name "yrjeong97"
          git config user.email "yrjeong@ati2000.co.kr"
          if [[ -n "$(git status --porcelain)" ]]; then
            git commit -m "Add non-PascalCase report"
            git diff-index --quiet HEAD -- ':!roslyn_report.txt' || git commit -m "Add non-PascalCase names report"
            git push origin main
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          PROJECT_PATH: ${{ env.PROJECT_PATH }}